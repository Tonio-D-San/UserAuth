spring.application.name=${PROJ_NAME:default-auth}
spring.application.version=${PROJ_VERSION:0.0.1}
# http://localhost:8081/api/swagger-ui/index.html

# Server
server.port=${PROJ_PORT:8082}
database.host.name=${PG_HOSTNAME:${LOCALHOST:localhost}}

# Database
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.url=jdbc:postgresql://${database.host.name}:${POSTGRES_PORT:5432}/${POSTGRES_DB:pg-l-t}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:postgres}
spring.jpa.open-in-view=true

# Keycloak
keycloak.host.name=${KC_HOSTNAME:${LOCALHOST:localhost}}
keycloak.host=${SCHEMA:http}://${keycloak.host.name}:${KC_HOSTNAME_PORT:5443}
keycloak.realm.name=${KEYCLOAK_REALM_NAME:auth-hub}
keycloak.client-id.be=${KEYCLOAK_CLIENT_ID:user-client-be}
keycloak.authorization-grant-type=password
keycloak.host.realm=${keycloak.host}/realms/${keycloak.realm.name}
keycloak.host.user=${keycloak.host}/admin/realms/${keycloak.realm.name}/users
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.host.realm}
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.client-id.be}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=${keycloak.authorization-grant-type}
spring.security.oauth2.client.registration.keycloak.client-name=${keycloak.client-id.be}
spring.security.oauth2.client.registration.keycloak.client-authentication-method=POST
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.host.realm}

## Google
#spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
#spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
#spring.security.oauth2.client.registration.google.scope=openid, profile, email

# Swagger
springdoc.swagger-ui.oauth.client-id=${keycloak.client-id.be}

# Configuring info endpoint
info.app.name=${spring.application.name}
info.app.description=${spring.application.name} project
info.app.version=${spring.application.version}

# MVC configuration
spring.mvc.static-path-pattern=/**

# API documentation & test
springdoc.api-docs.path=/api/openapi-docs.html
springdoc.swagger-ui.path=/api/swagger-ui.html
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.operations-sorter=alpha
springdoc.override-with-generic-response=false
springdoc.pre-loading-enabled=true
