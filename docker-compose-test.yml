networks:
  application:
    driver: bridge
  databases:
    driver: bridge

volumes:
  postgres_test:
    driver: local

services:
  ############## Keycloak Test ##############
  auth-hub:
    container_name: ${PROJECT_TEST}
    depends_on:
      - ${POSTGRES_SERVICE_NAME_TEST}
      - ${KC_SERVICE_NAME_TEST}
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8082:8082"
    restart: no
    networks:
      - application
      - databases


  ############## Keycloak Test ##############
  keycloak-test:
    image: quay.io/keycloak/keycloak:23.0.1
    container_name: ${KEYCLOAK_TEST}
    restart: no
    env_file:
      - .env
    volumes:
      - ./services/keycloak/auth.json:/opt/keycloak/data/import/user-realm.json
      - ./services/keycloak/custom-theme:/opt/keycloak/providers/mio-tema
      - ./services/keycloak/custom-theme:/opt/keycloak/themes/mio-tema
    command: [ "start-dev", "--import-realm","--http-port=5443" ]
    ports:
      - '${KC_HOSTNAME_PORT}:${KC_HOSTNAME_PORT}'
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/localhost/5443 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'"
        ]
      interval: 5s
      timeout: 2s
      retries: 50
    networks:
      - application

  ############## Postgres Test ##############
  postgres-test:
    image: postgres:15.6
    container_name: ${POSTGRES_TEST}
    restart: no
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    env_file:
      - .env
    volumes:
      - postgres_test:/var/lib/postgresql/data
      - ./database/postgres/user_db_structure.sql:/docker-entrypoint-initdb.d/01_user_db_structure.sql
      - ./database/postgres/user_db_insert_user_test.sql:/docker-entrypoint-initdb.d/02_user_insert.sql
    networks:
      - databases